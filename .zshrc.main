
# 環境変数
#export LANG=ja_JP.UTF-8
export LANG=en_US.UTF-8
#export LANG=C
export SHELL=/bin/zsh 

# 色を使用出来るようにする
autoload -Uz colors
colors

# emacs 風キーバインドにする
bindkey -e

# ヒストリの設定
HISTFILE=~/.zsh_history
HISTSIZE=2000
SAVEHIST=2000
HISTTIMEFORMAT=%Y/%m/%d%H:%M:%S

# 単語の区切り文字を指定する
autoload -Uz select-word-style
select-word-style default
# ここで指定した文字は単語区切りとみなされる
# / も区切りと扱うので、^W でディレクトリ１つ分を削除できる
zstyle ':zle:*' word-chars " /=;@:{},|"
zstyle ':zle:*' word-style unspecified

########################################
# 補完
# 補完機能を有効にする
autoload -Uz compinit
compinit

# 補完で小文字でも大文字にマッチさせる
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# ../ の後は今いるディレクトリを補完しない
zstyle ':completion:*' ignore-parents parent pwd ..

# sudo の後ろでコマンド名を補完する
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
		   /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin

# ps コマンドのプロセス名補完
		   zstyle ':completion:*:processes' command 'ps x -o pid,s,args'

#######################################
#source ~/.git-prompt.sh
#setopt PROMPT_SUBST ; PS1='[%n@%m %c$(__git_ps1 " (%s)")]\$ '

# プロンプト
# 1行表示
# PROMPT="%~ %# "
# 2行表示
now_group=`id | awk '{print $2}' | sed -e 's/^.*(//' -e 's/)$//'`

#PROMPT='%{\e[04;30;47m%}[%d %w %D %T %Y]%{\e[0m%} %{\e[01;04;32m%}$name@%{\e[0m%}%{\e[01;04;31m%}${HOST}:%{\e[0m%}%{\e[04;32m%} %~%{\e[0m%} \nGroup is %{\e[07;34m%}$now_group%{\e[0m%} -> '
umask 022

#PROMPT="%{${fg[green]}%}[%n@%m]%{${reset_color}%} %~
#%# "


PROMPT="${bg[white]}%F{}%U[ %D{%a %b %d %H:%M %Y} ]%u%f%{${reset_color}%} %F{green}%U%~%u
%F{green}%B%n@%f%F{cyan}%m%f%b[$now_group] %# "

########################################
# vcs_info
autoload -Uz vcs_info
autoload -Uz add-zsh-hook

zstyle ':vcs_info:*' formats '%F{green}(%s)-[%b]%f'
zstyle ':vcs_info:*' actionformats '%F{red}(%s)-[%b|%a]%f'

function _update_vcs_info_msg() {
	#LANG=en_US.UTF-8 vcs_info
	LANG=C vcs_info
	RPROMPT="${vcs_info_msg_0_}"
}
add-zsh-hook precmd _update_vcs_info_msg
#precmd() { vcs_info }
#RPROMPT='${vcs_info_msg_0_}%f'
#unsetopt promptcr

########################################
# オプション
# 日本語ファイル名を表示可能にする
setopt print_eight_bit

# beep を無効にする
setopt no_beep

# フローコントロールを無効にする
setopt no_flow_control

# '#' 以降をコメントとして扱う
setopt interactive_comments

# ディレクトリ名だけでcdする
setopt auto_cd

# cd したら自動的にpushdする
setopt auto_pushd
# 重複したディレクトリを追加しない
setopt pushd_ignore_dups

# 同時に起動したzshの間でヒストリを共有する
setopt share_history

# 同じコマンドをヒストリに残さない
setopt hist_ignore_all_dups

# スペースから始まるコマンド行はヒストリに残さない
setopt hist_ignore_space

# ヒストリに保存するときに余分なスペースを削除する
setopt hist_reduce_blanks

# 高機能なワイルドカード展開を使用する
setopt extended_glob

# no nomatch
setopt nonomatch
########################################
# キーバインド

# ^R で履歴検索をするときに * でワイルドカードを使用出来るようにする
bindkey '^R' history-incremental-pattern-search-backward

#######################################
# Aliases
source $HOME/.zshrc.alias
#######################################

#######################################
# PATH
unset PATH
PATH=/Users/hiroki/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/usr/texbin:/opt/X11/bin
#PATH=$PATH:$HOME/work/phase0/phase0_2014.03.01/bin
#PATH=$PATH:/usr/local/share/ghostscript/9.16/lib
PATH=$PATH:/Users/hiroki/opt/ns-install-osx/ns-allinone-2.35/bin:
PATH=$PATH:/Users/hiroki/opt/ns-install-osx/ns-allinone-2.35/tcl8.5.10/unix:
PATH=$PATH:/Users/hiroki/opt/ns-install-osx/ns-allinone-2.35/tk8.5.10/unix
export PATH

unset LD_LIBRARY_PATH
LD_LIBRARY_PATH=/Users/hiroki/opt/ns-install-osx/ns-allinone-2.35/otcl-1.14
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/Users/hiroki/opt/ns-install-osx/ns-allinone-2.35/lib
export LD_LIBRARY_PATH

unset TCL_LIBRARY
TCL_LIBRARY=Users/hiroki/opt/ns-install-osx/ns-allinone-2.35/tcl8.5.10/library
export TCL_LIBRARY
unset PYENV_ROOT
PYENV_ROOT=$HOME/.pyenv
export PYENV_ROOT
export PATH=$PYENV_ROOT/bin:$PATH
eval "$(pyenv init -)"

unset GOPATH
GOPATH=$HOME/go
export GOPATH

## brew config
export HOMEBREW_VERBOSE=1
export HOMEBREW_CURL_VERBOSE=1
export HOMEBREW_MAKE_JOBS=5
export HOMEBREW_EDITOR="/usr/local/bin/vim"
export HOMEBREW_LOGS="/usr/local/var/homebrew/log/"
export XDG_CONFIG_HOME="$HOME/.config"
export TERM='xterm-256color'
